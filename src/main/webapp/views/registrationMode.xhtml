<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                xmlns:pe="http://primefaces.org/ui/extensions" xmlns:c="http://java.sun.com/jsp/jstl/core"
>
    <h:form id="lessonForm">
        <p:socket onMessage="spawnNotification" channel="/notify"/>
        <p:socket channel="/register">
            <p:ajax event="message" update="lastVisitInfo attendanceInfo presentStudents absentStudents additionalInfo"/>
        </p:socket>

        <p:panelGrid id="lessonInfo" columns="2" styleClass="noBorder lesson-info">
            <p:panel id="lastVisitInfo" styleClass="visit-info">
                <p:panelGrid columns="2" columnClasses="w250px h280px,">
                    <p:graphicImage styleClass="student-photo"
                                    value="#{imageBean.getImagePath(registrationModeBean.processedStudent.cardUid)}"/>
                    <p:panel rendered="#{registrationModeBean.processedStudent eq null}">
                        <p:outputLabel value="#{msg['lesson.visit.noData']}"/>
                    </p:panel>
                    <p:panel rendered="#{registrationModeBean.processedStudent ne null}" styleClass="visit-label">
                        <p:outputLabel id="visitLastName" value="#{registrationModeBean.processedStudent.lastName}"/>
                        <p:outputLabel id="visitFirstName" value="#{registrationModeBean.processedStudent.firstName}"/>
                        <p:outputLabel id="visitGroup" escape="false"
                                       styleClass="font-size-20pt margin-top-20px margin-bottom-20px"
                                       value="#{registrationModeBean.processedStudent.groupNames}"/>
                        <p:outputLabel styleClass="lowercase" escape="false"
                                       value="#{registrationModeBean.getStudentSkip(registrationModeBean.processedStudent)}"
                                       rendered="#{not registrationModeBean.studentNotExist}"/>
                        <p:outputLabel value="#{msg['label.reRegistration']}"
                                       styleClass="font-size-12pt blue margin-top-20px"
                                       rendered="#{registrationModeBean.reRegistration}"/>
                        <p:outputLabel value="#{registrationModeBean.processedStudent.cardUid}"
                                       rendered="#{registrationModeBean.studentNotExist}"/>
                        <p:outputLabel value="#{msg['label.studentNotExist']}"
                                       styleClass="font-size-12pt red margin-top-20px"
                                       rendered="#{registrationModeBean.studentNotExist}"/>
                    </p:panel>
                </p:panelGrid>
            </p:panel>
            <p:panel styleClass="right">
                <p:panelGrid columns="1" styleClass="inline">
                    <p:panel id="lessonButtons" styleClass="lesson-buttons">
                        <p:commandButton title="#{msg['btn.startRecord']}" icon="fa fa-fw fa-play"
                                         update=":lessonForm:lessonButtons"
                                         actionListener="#{serialBean.startRecord}"
                                         rendered="#{not serialBean.recordStarted}"/>
                        <p:commandButton title="#{msg['btn.stopRecord']}" icon="fa fa-fw fa-stop"
                                         update=":lessonForm:lessonButtons"
                                         actionListener="#{serialBean.stopRecord}"
                                         rendered="#{serialBean.recordStarted}"/>

                        <p:commandButton title="#{msg['btn.enableSound']}" icon="fa fa-fw fa-volume-up"
                                         update=":lessonForm:lessonButtons"
                                         actionListener="#{serialBean.enableSound}"
                                         rendered="#{serialBean.recordStarted and not serialBean.soundEnabled}"/>
                        <p:commandButton title="#{msg['btn.disableSound']}" icon="fa fa-fw fa-volume-off"
                                         update=":lessonForm:lessonButtons"
                                         actionListener="#{serialBean.disableSound}"
                                         rendered="#{serialBean.recordStarted and serialBean.soundEnabled}"/>

                        <p:commandButton
                            title="#{msg[registrationModeBean.camera ? 'btn.camera.turnOff' : 'btn.camera.turnOn']}"
                            styleClass="#{registrationModeBean.camera ? 'red' : ''}"
                            icon="fa fa-fw fa-video-camera"
                            update=":lessonForm:lessonButtons :lessonForm:additions"
                            actionListener="#{registrationModeBean.setCamera(!registrationModeBean.camera)}"
                        />

                        <p:commandButton title="#{msg['btn.addVisit']}" icon="fa fa-fw fa-plus"
                                         actionListener="#{registrationModeBean.initAllStudents}"
                                         oncomplete="PF('addStudentsDialog').show()"
                                         update=":addStudentsForm:studentDetail"/>

                        <p:commandButton title="#{msg['btn.openLessonMode']}"
                                         icon="fa fa-fw fa-list"
                                         update="@([id$=wrapper])"
                                         actionListener="#{registrationModeBean.openLessonMode}">
                            <f:setPropertyActionListener value="#{false}" target="#{menuBean.showMenu}"/>
                        </p:commandButton>

                        <p:commandButton title="#{msg['btn.backToLessons']}"
                                         icon="fa fa-fw fa-arrow-left"
                                         actionListener="#{registrationModeBean.returnToLessons}"
                                         update="@([id$=wrapper])">
                            <f:setPropertyActionListener value="#{true}" target="#{menuBean.showMenu}"/>
                        </p:commandButton>

                        <p:commandButton title="#{msg['btn.hide.menu']}" icon="fa fa-fw fa-align-center"
                                         update=":menuForm :lessonForm:lessonButtons"
                                         actionListener="#{menuBean.hideMenu}"
                                         rendered="#{menuBean.showMenu}"/>
                        <p:commandButton title="#{msg['btn.show.menu']}" icon="fa fa-fw fa-align-justify"
                                         update=":menuForm :lessonForm:lessonButtons"
                                         actionListener="#{menuBean.showMenu}"
                                         rendered="#{not menuBean.showMenu}"/>

                        <p:commandButton id="modeBtn" icon="fa fa-fw fa-forward"/>
                        <p:overlayPanel for="modeBtn" showEvent="mouseover"
                                        hideEvent="mousedown"
                                        style="position: fixed;"
                                        dismissable="false" showCloseIcon="true">
                            <p:commandButton title="#{msg['btn.studentMode']}" value="#{msg['btn.studentMode']}"
                                             update="@([id$=views])"
                                             styleClass="block w100pc margin-bottom-10px"
                                             actionListener="#{studentModeBean.initStudentMode(null, lessonModeBean.stream)}">
                                <f:setPropertyActionListener value="studentMode" target="#{sessionBean.activeView}"/>
                                <f:setPropertyActionListener value="#{false}" target="#{menuBean.showMenu}"/>
                                <f:setPropertyActionListener value="#{registrationModeBean.selectedLesson.stream}"
                                                             target="#{lessonModeBean.stream}"/>
                                <f:setPropertyActionListener value="#{registrationModeBean.selectedLesson}"
                                                             target="#{lessonModeBean.lesson}"/>
                            </p:commandButton>
                            <p:commandButton title="#{msg['btn.photoMode']}" value="#{msg['btn.photoMode']}"
                                             actionListener="#{registrationModeBean.openPhotoMode}"
                                             update="@([id$=views])"
                                             styleClass="block w100pc margin-bottom-10px">
                                <f:setPropertyActionListener value="#{false}" target="#{menuBean.showMenu}"/>
                            </p:commandButton>
                            <p:commandButton title="#{msg['btn.lessonMode']}"
                                             value="#{msg['btn.lessonMode']}"
                                             update="@([id$=wrapper])"
                                             actionListener="#{registrationModeBean.openLessonMode}"
                                             styleClass="block w100pc margin-bottom-10px">
                                <f:setPropertyActionListener value="#{false}" target="#{menuBean.showMenu}"/>
                            </p:commandButton>
                            <p:commandButton title="#{msg['btn.lessons']}"
                                             value="#{msg['btn.lessons']}"
                                             update="@([id$=wrapper])"
                                             styleClass="block w100pc margin-bottom-10px">
                                <f:setPropertyActionListener value="#{true}" target="#{menuBean.showMenu}"/>
                                <f:setPropertyActionListener value="lessons" target="#{sessionBean.activeView}"/>
                            </p:commandButton>
                        </p:overlayPanel>
                    </p:panel>
                    <p:panelGrid columns="2" styleClass="lesson-text left">
                        <p:panelGrid columns="2" id="attendanceInfo" styleClass="bold">
                            <h:outputText value="#{msg['lesson.students.all']}"/>
                            <h:outputText value="#{registrationModeBean.lessonStudents.size()}"/>

                            <h:outputText value="#{msg['lesson.students.present']}"/>
                            <h:outputText
                                value="#{registrationModeBean.presentStudents.size() - registrationModeBean.additionalStudents.size()}"/>

                            <h:outputText value="#{msg['lesson.students.absent']}"/>
                            <h:outputText value="#{registrationModeBean.absentStudents.size()}"/>

                            <h:outputText rendered="#{registrationModeBean.additionalStudents.size() gt 0}"
                                          value="#{msg['lesson.students.additional']}"/>
                            <h:outputText rendered="#{registrationModeBean.additionalStudents.size() gt 0}"
                                          value="#{registrationModeBean.additionalStudents.size()}"/>
                        </p:panelGrid>
                        <p:panel>
                            <p:outputLabel value="#{registrationModeBean.selectedLesson.stream.name}"/>
                            <p:outputLabel rendered="#{registrationModeBean.selectedLesson.group ne null}"
                                           value="#{registrationModeBean.selectedLesson.group.name}"/>
                            <p:outputLabel
                                value="#{msg[registrationModeBean.selectedLesson.type.key].concat(' ').concat(utility.getLessonCount(registrationModeBean.selectedLesson))}"/>
                            <p:outputLabel value="#{registrationModeBean.selectedLesson.date}"
                                           converter="localDateConverter"/>
                            <p:outputLabel value="#{registrationModeBean.selectedLesson.schedule.caption}"/>
                            <p:commandButton title="#{msg['btn.fastRegistration']}"
                                             value="#{msg['btn.fastRegistration']}"
                                             actionListener="#{registrationModeBean.fastRegistration}"
                                             update="@([id$=views])"
                                             styleClass="margin-top-10px font-size-14pt"
                                             rendered="${registrationModeBean.fastRegistration}">
                            </p:commandButton>
                        </p:panel>
                    </p:panelGrid>
                </p:panelGrid>
            </p:panel>
        </p:panelGrid>

        <p:panelGrid id="lessonTables" columns="3" styleClass="noBorder v-align-top lesson-tables"
                     columnClasses=",,w100pc">
            <p:dataTable id="presentStudents"
                         var="pStudent"
                         widgetVar="pStudentsTable"
                         value="#{registrationModeBean.presentStudentsLazyModel}"
                         sortBy="#{pStudent.registrationTime}"
                         sortOrder="descending"
                         resizableColumns="true"
                         selection="#{registrationModeBean.selectedPresentStudents}"
                         rowKey="#{pStudent.id}"
                         paginator="true"
                         rows="15"
                         paginatorTemplate="{RowsPerPageDropdown} {FirstPageLink} {PreviousPageLink} {CurrentPageReport} {NextPageLink} {LastPageLink}"
                         rowsPerPageTemplate="10,11,12,13,14,15,16,17,18,19,20"
                         paginatorPosition="bottom"
                         lazy="true"
                         emptyMessage="#{msg['label.emptyMessage']}">

                <p:ajax event="rowSelectCheckbox" update="removePresentStudentsBtn"/>
                <p:ajax event="rowUnselectCheckbox" update="removePresentStudentsBtn"/>
                <p:ajax event="toggleSelect" update="removePresentStudentsBtn"
                        listener="#{registrationModeBean.onPresentStudentsSelect}"/>

                <p:ajax event="rowSelect" listener="#{registrationModeBean.onStudentRowSelect}"
                        update=":lessonForm:lastVisitInfo :lessonForm:additionalInfo"/>
                <p:ajax event="rowDblselect" listener="#{registrationModeBean.onStudentRowDblClckSelect}"
                        update="@([id$=wrapper])"/>

                <p:column selectionMode="multiple" styleClass="w16px center"/>

                <p:column styleClass="transparent-button w20px center">
                    <f:facet name="header">
                        <p:commandButton id="removePresentStudentsBtn"
                                         update=":lessonForm:presentStudents :lessonForm:absentStudents :lessonForm:attendanceInfo"
                                         styleClass="w25px"
                                         icon="fa fa-fw fa-angle-double-right" title="Remove"
                                         actionListener="#{registrationModeBean.removePresentStudents}"
                                         disabled="#{registrationModeBean.selectedPresentStudents eq null or registrationModeBean.selectedPresentStudents.size() eq 0}"/>
                    </f:facet>
                    <p:commandButton
                        update=":lessonForm:presentStudents :lessonForm:absentStudents :lessonForm:attendanceInfo"
                        icon="fa fa-fw fa-angle-right" title="Remove"
                        styleClass="w25px"
                        actionListener="#{registrationModeBean.removeLessonStudent(pStudent)}"/>
                </p:column>

                <p:column sortBy="#{pStudent.name}"
                          filterBy="#{pStudent.name}"
                          filterMatchMode="startsWith"
                          styleClass="bold w210px blue">
                    <h:outputText styleClass="bold #{pStudent.additional ? 'blue' : ''}" value="#{pStudent.name}"/>
                </p:column>

                <p:column headerText="#{msg['total.skip']}"
                          styleClass="center w30px bold"
                          sortBy="#{pStudent.totalSkip}">
                    <h:outputText value="#{pStudent.totalSkip}"/>
                </p:column>
                <p:column headerText="#{msg['skip.header']}"
                          styleClass="center w55px">
                    <h:outputText value="#{pStudent.skips}"/>
                </p:column>


                <p:column
                    sortBy="#{pStudent.registrationTime}"
                    styleClass="center w70px">
                    <h:outputText
                        value="#{pStudent.registrationTime}"
                        converter="localTimeConverter"/>
                </p:column>
            </p:dataTable>

            <p:dataTable id="absentStudents"
                         var="aStudent"
                         widgetVar="aStudentsTable"
                         value="#{registrationModeBean.absentStudentsLazyModel}"
                         sortBy="#{aStudent.totalSkip}"
                         sortOrder="descending"
                         resizableColumns="true"
                         selection="#{registrationModeBean.selectedAbsentStudents}"
                         rowKey="#{aStudent.id}"
                         paginator="true"
                         rows="15"
                         paginatorTemplate="{RowsPerPageDropdown} {FirstPageLink} {PreviousPageLink} {CurrentPageReport} {NextPageLink} {LastPageLink}"
                         rowsPerPageTemplate="10,11,12,13,14,15,16,17,18,19,20"
                         paginatorPosition="bottom"
                         lazy="true"
                         emptyMessage="#{msg['label.emptyMessage']}">
                <p:ajax event="rowSelectCheckbox" update="addAbsentStudentsBtn"/>
                <p:ajax event="rowUnselectCheckbox" update="addAbsentStudentsBtn"/>
                <p:ajax event="toggleSelect" update="addAbsentStudentsBtn"
                        listener="#{registrationModeBean.onAbsentStudentsSelect}"/>

                <p:ajax event="rowSelect" listener="#{registrationModeBean.onStudentRowSelect}"
                        update=":lessonForm:lastVisitInfo :lessonForm:additionalInfo"/>
                <p:ajax event="rowDblselect" listener="#{registrationModeBean.onStudentRowDblClckSelect}"
                        update="@([id$=wrapper])"/>

                <p:column selectionMode="multiple" styleClass="w16px center"/>

                <p:column styleClass="transparent-button w20px center">
                    <f:facet name="header">
                        <p:commandButton id="addAbsentStudentsBtn"
                                         update=":lessonForm:presentStudents :lessonForm:absentStudents :lessonForm:lastVisitInfo :lessonForm:attendanceInfo :lessonForm:additionalInfo"
                                         icon="fa fa-angle-double-left" title="Add"
                                         styleClass="w25px"
                                         actionListener="#{registrationModeBean.addAbsentStudents}"
                                         disabled="#{registrationModeBean.selectedAbsentStudents eq null or registrationModeBean.selectedAbsentStudents.size() eq 0}"/>
                    </f:facet>
                    <p:commandButton
                        update=":lessonForm:presentStudents :lessonForm:absentStudents :lessonForm:lastVisitInfo :lessonForm:attendanceInfo :lessonForm:additionalInfo"
                        icon="fa fa-fw fa-angle-left" title="Add"
                        styleClass="w25px"
                        actionListener="#{registrationModeBean.addLessonStudent(aStudent)}"/>
                </p:column>

                <p:column sortBy="#{aStudent.name}"
                          filterBy="#{aStudent.name}"
                          filterMatchMode="startsWith"
                          styleClass="bold w210px">
                    <h:outputText styleClass="bold" value="#{aStudent.name}"/>
                </p:column>

                <p:column headerText="#{msg['total.skip']}"
                          styleClass="center w30px bold"
                          sortBy="#{aStudent.totalSkip}">
                    <h:outputText value="#{aStudent.totalSkip}"/>
                </p:column>
                <p:column headerText="#{msg['skip.header']}"
                          styleClass="center w55px">
                    <h:outputText value="#{aStudent.skips}"/>
                </p:column>

            </p:dataTable>

            <p:panel id="additions" styleClass="additions">
                <p:panel id="timer" styleClass="time ui-widget-header">
                    <pe:timer
                        widgetVar="timer"
                        rendered="#{registrationModeBean.timer ne 0}"
                        format="HH:mm:ss"
                        timeout="#{registrationModeBean.timer}"
                        listener="#{registrationModeBean.calculateTimer}"
                        singleRun="false"
                        update="timer"/>
                    <h:outputText value="00:00:00" rendered="#{registrationModeBean.timer eq 0}"/>
                    /
                    <p:clock pattern="HH:mm:ss"/>
                </p:panel>

                <p:panel styleClass="ui-widget-header margin-bottom-10px margin-top-10px h30px">

                </p:panel>

                <p:photoCam id="camera"
                            widgetVar="camera"
                            styleClass="camera"
                            rendered="#{registrationModeBean.camera}"/>
                <p:panel id="additionalInfo"
                         rendered="#{not registrationModeBean.camera}"
                         header="#{msg['label.additional.info']}"
                         styleClass="additional-info h200px">
                    <h:outputLabel value="#{registrationModeBean.processedStudent.fullName}" styleClass="bold"/>

                    <h:panelGroup rendered="#{notificationSettingsBean.active}">
                        <h:panelGroup rendered="#{notificationSettingsBean.settings['PRAEPOSTOR'].active}">
                            <!-- TODO: show label that current student is a praepostor -->
                        </h:panelGroup>

                        <h:panelGroup rendered="#{notificationSettingsBean.settings['ABSENCE'].active}">
                            <c:set var="totalSkip"
                                   value="#{registrationModeBean.skipInfo[registrationModeBean.processedStudent.id]['total.skip']}"/>
                            <h:panelGroup rendered="#{notificationSettingsBean.settings['ABSENCE'].data le totalSkip}">
                                <h:outputFormat value="#{msg['notification.absence.message']}"
                                                styleClass="bold dark-red block">
                                    <f:param value="#{totalSkip}"/>
                                </h:outputFormat>
                            </h:panelGroup>
                        </h:panelGroup>

                        <h:panelGroup rendered="#{notificationSettingsBean.settings['STUDENT'].active}">
                            <ui:repeat id="notification" var="notification"
                                       value="#{registrationModeBean.processedStudent.notifications}">
                                <h:panelGrid columns="2" columnClasses="w300px, w20px" styleClass="w100pc">
                                    <h:outputText value="#{notification.description}" styleClass="bold dark-red"/>
                                    <h:outputText value="#{notification.createDate}" converter="localDateConverter"/>
                                </h:panelGrid>
                            </ui:repeat>
                        </h:panelGroup>
                    </h:panelGroup>

                    <ui:repeat id="noteInfo" var="note" value="#{registrationModeBean.notes}">
                        <h:panelGrid columns="2" columnClasses="w300px, w20px" styleClass="w100pc">
                            <h:outputText value="#{note.description}"/>
                            <h:outputText value="#{note.createDate}" converter="localDateConverter"/>
                        </h:panelGrid>
                    </ui:repeat>
                </p:panel>
            </p:panel>
        </p:panelGrid>

        <p:contextMenu for="presentStudents">
            <p:menuitem value="#{msg['option.edit']}"
                        update=":studentInfoForm"
                        icon="ui-icon-arrowrefresh-1-w"
                        actionListener="#{studentBean.initStudent(registrationModeBean.selectedPresentStudents.get(0).student)}">
                <p:resetInput target=":studentInfoForm:studentDetail"/>
            </p:menuitem>
        </p:contextMenu>

        <p:contextMenu for="absentStudents">
            <p:menuitem value="#{msg['option.edit']}"
                        update=":studentInfoForm"
                        icon="ui-icon-arrowrefresh-1-w"
                        actionListener="#{studentBean.initStudent(registrationModeBean.selectedAbsentStudents.get(0).student)}">
                <p:resetInput target=":studentInfoForm:studentDetail"/>
            </p:menuitem>
            <p:menuitem value="#{msg['notification']}"
                        update=":lessonForm:notifications"
                        icon="fa fa-fw fa-exclamation-triangle"
                        oncomplete="PF('notificationDialog').show()"
                        actionListener="#{registrationModeBean.setSelectedStudent(registrationModeBean.selectedAbsentStudents.get(0))}">
                <f:setPropertyActionListener value="#{null}" target="#{registrationModeBean.newNotification}"/>
            </p:menuitem>
        </p:contextMenu>

        <p:confirmDialog global="true" showEffect="fade" hideEffect="fade">
            <p:commandButton value="#{msg['label.yes']}" type="button" styleClass="ui-confirmdialog-yes"
                             icon="ui-icon-check"/>
            <p:commandButton value="#{msg['label.no']}" type="button" styleClass="ui-confirmdialog-no"
                             icon="ui-icon-close"/>
        </p:confirmDialog>

        <p:dialog header="#{msg['notification']}"
                  widgetVar="notificationDialog"
                  modal="true"
                  showEffect="fade"
                  hideEffect="fade"
                  resizable="false">
            <p:ajax event="close" update=":lessonForm:additionalInfo"/>
            <p:outputPanel id="notifications">
                <h:outputLabel value="#{registrationModeBean.selectedStudent.name}" styleClass="bold block"/>

                <ui:repeat id="notificationInfo" var="n"
                           value="#{registrationModeBean.selectedStudent.student.notifications}">
                    <h:panelGrid columns="4" columnClasses="w20px, w300px, w100px, w20px">
                        <h:selectBooleanCheckbox id="active" value="#{n.active}"/>
                        <h:outputText value="#{n.description}"/>
                        <h:outputText value="#{n.createDate}" converter="localDateConverter"/>
                        <p:commandButton actionListener="#{registrationModeBean.removeNotification(n)}"
                                         update=":lessonForm:notifications"
                                         icon="fa fa-fw fa-minus" title="#{msg['option.remove']}"
                                         styleClass="red"/>
                    </h:panelGrid>
                </ui:repeat>
                <p:inputTextarea id="description" value="#{registrationModeBean.newNotification}"/>

                <p:commandButton value="#{msg['btn.save.exit']}" icon="fa fa-fw fa-save"
                                 actionListener="#{registrationModeBean.saveNotification}"
                                 styleClass="block" update=":lessonForm:notifications">

                </p:commandButton>
            </p:outputPanel>
        </p:dialog>
    </h:form>
</ui:composition>
